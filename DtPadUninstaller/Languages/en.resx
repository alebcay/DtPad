<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorO_copyErrorDescriptionPictureBoxToolTip" xml:space="preserve">
    <value>Copy error message to clipboard</value>
  </data>
  <data name="ErrorO_okButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ErrorO_Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Form1_cancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Form1_descriptionLabel" xml:space="preserve">
    <value>DtPad Uninstaller is an application that make easier the uninstall of DtPad and each of its components.

If you like to make it manually, simply delete the DtPad folder, since it does not use Windows registry or system folders.

Otherwise click over "Uninstall" to proceed.

If you like, click on the link below to send a message about how was using DtPad and why you decided to uninstall it.</value>
  </data>
  <data name="Form1_linkLabel" xml:space="preserve">
    <value>Click here to send an e-mail to the author</value>
  </data>
  <data name="Form1_titleLabel" xml:space="preserve">
    <value>DtPad Uninstaller</value>
  </data>
  <data name="Form1_uninstallButton" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="Program_InstanceDtHelp" xml:space="preserve">
    <value>Close any instance of DtHelp before start the uninstall process.</value>
  </data>
  <data name="Program_InstanceDtPad" xml:space="preserve">
    <value>Close any instance of DtPad before start the uninstall process.</value>
  </data>
  <data name="Program_InstanceDtPadUninstaller" xml:space="preserve">
    <value>There is already an instance of DtPad Unistaller open.</value>
  </data>
  <data name="Program_InstanceDtPadUpdater" xml:space="preserve">
    <value>Close any instance of DtPad Updater before start the uninstall process.</value>
  </data>
  <data name="WindowManager_Exception" xml:space="preserve">
    <value>Exception occured:</value>
  </data>
  <data name="WindowManager_FatalException" xml:space="preserve">
    <value>Fatal exception occured:</value>
  </data>
  <data name="Form1_Title" xml:space="preserve">
    <value>DtPad Uninstaller</value>
  </data>
  <data name="UninstallManager_DeletedFile" xml:space="preserve">
    <value>deleted</value>
  </data>
  <data name="UninstallManager_Error" xml:space="preserve">
    <value>Error during uninstall process. In case of this error repetition it is recommended to manually delete files contained into DtPad installation folder.
Error detail:</value>
  </data>
  <data name="UninstallManager_File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="UninstallManager_Start" xml:space="preserve">
    <value>DtPad uninstall process starting...</value>
  </data>
  <data name="UninstallManager_DeleteDesktop" xml:space="preserve">
    <value>Deleting desktop shortcut...</value>
  </data>
  <data name="UninstallManager_DeleteFiles" xml:space="preserve">
    <value>Deleting files...</value>
  </data>
  <data name="UninstallManager_DeleteLinks" xml:space="preserve">
    <value>Deleting Start menu shortcuts...</value>
  </data>
  <data name="UninstallManager_DeleteSendTo" xml:space="preserve">
    <value>Deleting Send To association...</value>
  </data>
  <data name="Form1_CloseButton" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="UninstallManager_Success" xml:space="preserve">
    <value>Uninstall completed with success!</value>
  </data>
  <data name="AlertO_okButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AlertO_Title" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="UninstallManager_DeletedFolder" xml:space="preserve">
    <value>deleted</value>
  </data>
  <data name="UninstallManager_Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Form1_SureUninstall" xml:space="preserve">
    <value>Are you sure to proceed with DtPad uninstallation?
All configuration files will be deleted.</value>
  </data>
  <data name="QuestionYN_noButton" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="QuestionYN_Title" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionYN_yesButton" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="UninstallManager_DeletedKey" xml:space="preserve">
    <value>deleted</value>
  </data>
  <data name="UninstallManager_DeleteOpenWith" xml:space="preserve">
    <value>Deleting Open With association...</value>
  </data>
  <data name="UninstallManager_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="UninstallManager_ShellString" xml:space="preserve">
    <value>Open with DtPad</value>
  </data>
  <data name="Form1_copyToolStripMenuItem" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Form1_selectAllToolStripMenuItem" xml:space="preserve">
    <value>Select All</value>
  </data>
</root>