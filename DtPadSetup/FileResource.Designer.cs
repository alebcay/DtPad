//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DtPadSetup {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FileResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FileResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DtPadSetup.FileResource", typeof(FileResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static byte[] AppLimit_CloudComputing_SharpBox_Net40_dll {
            get {
                object obj = ResourceManager.GetObject("AppLimit_CloudComputing_SharpBox_Net40_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Be_Windows_Forms_HexBox_dll {
            get {
                object obj = ResourceManager.GetObject("Be_Windows_Forms_HexBox_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon CheckNewVersion_ico {
            get {
                object obj = ResourceManager.GetObject("CheckNewVersion_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] DevExpress_Data_v11_2_dll {
            get {
                object obj = ResourceManager.GetObject("DevExpress_Data_v11_2_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DevExpress_Utils_v11_2_dll {
            get {
                object obj = ResourceManager.GetObject("DevExpress_Utils_v11_2_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DevExpress_XtraEditors_v11_2_dll {
            get {
                object obj = ResourceManager.GetObject("DevExpress_XtraEditors_v11_2_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon Dt_ico {
            get {
                object obj = ResourceManager.GetObject("Dt_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] DtControls_dll {
            get {
                object obj = ResourceManager.GetObject("DtControls_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtHelp_exe {
            get {
                object obj = ResourceManager.GetObject("DtHelp_exe", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon DtHelp_ico {
            get {
                object obj = ResourceManager.GetObject("DtHelp_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] DtPad_exe {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_cl {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_cl", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!-- WARNING: MANUALLY EDITING OF THIS FILE COULD CAUSE DTPAD DYSFUNCTIONS!!! --&gt;
        ///&lt;configuration&gt;
        ///  &lt;configSections&gt;
        ///    &lt;section name=&quot;log4net&quot; type=&quot;System.Configuration.IgnoreSectionHandler&quot; /&gt;
        ///  &lt;/configSections&gt;
        ///  &lt;log4net&gt;
        ///    &lt;appender name=&quot;EventLogAppender&quot; type=&quot;log4net.Appender.EventLogAppender&quot;&gt;
        ///      &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;
        ///        &lt;conversionPattern value=&quot;%date [%thread] %-5level %logger - %message%newline&quot; /&gt;
        ///      &lt;/layout&gt;
        ///    &lt;/appende [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DtPad_exe_config {
            get {
                return ResourceManager.GetString("DtPad_exe_config", resourceCulture);
            }
        }
        
        internal static byte[] DtPad_exe_ex {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_ex", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_fv {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_fv", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_no {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_no", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_pw {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_pw", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_rf {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_rf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_rp {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_rp", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_rs {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_rs", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_ru {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_ru", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_sf {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_sf", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_sh {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_sh", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_tm {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_tm", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] DtPad_exe_to {
            get {
                object obj = ResourceManager.GetObject("DtPad_exe_to", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon DtPad_ico {
            get {
                object obj = ResourceManager.GetObject("DtPad_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] DtPadUninstaller_exe {
            get {
                object obj = ResourceManager.GetObject("DtPadUninstaller_exe", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon DtPadUninstaller_ico {
            get {
                object obj = ResourceManager.GetObject("DtPadUninstaller_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] DtPadUpdater_exe {
            get {
                object obj = ResourceManager.GetObject("DtPadUpdater_exe", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon DtPadUpdater_ico {
            get {
                object obj = ResourceManager.GetObject("DtPadUpdater_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] en_resources {
            get {
                object obj = ResourceManager.GetObject("en_resources", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Hunspellx64_dll {
            get {
                object obj = ResourceManager.GetObject("Hunspellx64_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Hunspellx86_dll {
            get {
                object obj = ResourceManager.GetObject("Hunspellx86_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] ICSharpCode_SharpZipLib_dll {
            get {
                object obj = ResourceManager.GetObject("ICSharpCode_SharpZipLib_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ==============================
        ///1 - ENGLISH
        ///==============================
        ///WARNING - This folder contains only temporary internet cache data used for browser previews.
        ///Whenever DtPad starts, it empties. DO NOT DELETE IT!
        ///
        ///
        ///
        ///==============================
        ///2 - ITALIANO
        ///==============================
        ///AVVISO - Questa cartella contiene solamente file temporanei di internet per l&apos;anteprima in browser.
        ///Ogni volta che DtPad viene avviato, essa si svuota. NON CANCELLARE!
        ///.
        /// </summary>
        internal static string Info_txt {
            get {
                return ResourceManager.GetString("Info_txt", resourceCulture);
            }
        }
        
        internal static byte[] it_resources {
            get {
                object obj = ResourceManager.GetObject("it_resources", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] itextsharp_dll {
            get {
                object obj = ResourceManager.GetObject("itextsharp_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS LICENSE DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN &quot;AS-IS&quot; BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE INFORMATION PROVIDED, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM ITS USE.
        ///
        ///
        ///
        ///License
        ///
        ///THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (&quot;CCPL&quot; OR &quot;LICENSE&quot;). THE WORK IS PROT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License_txt {
            get {
                return ResourceManager.GetString("License_txt", resourceCulture);
            }
        }
        
        internal static byte[] log4net_dll {
            get {
                object obj = ResourceManager.GetObject("log4net_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_WindowsAPICodePack_dll {
            get {
                object obj = ResourceManager.GetObject("Microsoft_WindowsAPICodePack_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_WindowsAPICodePack_Shell_dll {
            get {
                object obj = ResourceManager.GetObject("Microsoft_WindowsAPICodePack_Shell_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] MonthCalendar_dll {
            get {
                object obj = ResourceManager.GetObject("MonthCalendar_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon NewTab_ico {
            get {
                object obj = ResourceManager.GetObject("NewTab_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] Newtonsoft_Json_dll {
            get {
                object obj = ResourceManager.GetObject("Newtonsoft_Json_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] NHunspell_dll {
            get {
                object obj = ResourceManager.GetObject("NHunspell_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Icon OpenFile_ico {
            get {
                object obj = ResourceManager.GetObject("OpenFile_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon OpenSession_ico {
            get {
                object obj = ResourceManager.GetObject("OpenSession_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8888888b.  888    8888888b.               888
        ///888  &quot;Y88b 888    888   Y88b              888
        ///888    888 888    888    888              888
        ///888    888 888888 888   d88P 8888b.   .d88888
        ///888    888 888    8888888P&quot;     &quot;88b d88&quot; 888
        ///888    888 888    888       .d888888 888  888
        ///888  .d88P Y88b.  888       888  888 Y88b 888
        ///8888888P&quot;   &quot;Y888 888       &quot;Y888888  &quot;Y88888     [www.diariotraduttore.com]
        ///
        ///
        ///==============================
        ///INDICE
        ///==============================
        ///
        /// 1 - Introduzione
        /// 2 - Req [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Readme_txt {
            get {
                return ResourceManager.GetString("Readme_txt", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon SearchInFiles_ico {
            get {
                object obj = ResourceManager.GetObject("SearchInFiles_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon WebSite_ico {
            get {
                object obj = ResourceManager.GetObject("WebSite_ico", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static byte[] XmlGridControl_dll {
            get {
                object obj = ResourceManager.GetObject("XmlGridControl_dll", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
